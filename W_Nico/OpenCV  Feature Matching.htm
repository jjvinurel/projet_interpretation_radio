<!-- HTML header for doxygen 1.8.6-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=9">
<meta name="generator" content="Doxygen 1.8.12">
<title>OpenCV: Feature Matching</title>
<link href="http://docs.opencv.org/trunk/opencv.ico" rel="shortcut icon" type="image/x-icon">
<link href="OpenCV%20%20Feature%20Matching_fichiers/tabs.css" rel="stylesheet" type="text/css">
<script async="" src="OpenCV%20%20Feature%20Matching_fichiers/async-ads.js"></script><script type="text/javascript" async="" src="OpenCV%20%20Feature%20Matching_fichiers/cse.js"></script><script type="text/javascript" src="OpenCV%20%20Feature%20Matching_fichiers/jquery.js"></script>
<script type="text/javascript" src="OpenCV%20%20Feature%20Matching_fichiers/dynsections.js"></script>
<link href="OpenCV%20%20Feature%20Matching_fichiers/search.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="OpenCV%20%20Feature%20Matching_fichiers/searchdata.js"></script>
<script type="text/javascript" src="OpenCV%20%20Feature%20Matching_fichiers/search.js"></script>
<script type="text/x-mathjax-config;executed=true">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
//<![CDATA[
MathJax.Hub.Config(
{
  TeX: {
      Macros: {
          matTT: [ "\\[ \\left|\\begin{array}{ccc} #1 & #2 & #3\\\\ #4 & #5 & #6\\\\ #7 & #8 & #9 \\end{array}\\right| \\]", 9],
          fork: ["\\left\\{ \\begin{array}{l l} #1 & \\mbox{#2}\\\\ #3 & \\mbox{#4}\\\\ \\end{array} \\right.", 4],
          forkthree: ["\\left\\{ \\begin{array}{l l} #1 & \\mbox{#2}\\\\ #3 & \\mbox{#4}\\\\ #5 & \\mbox{#6}\\\\ \\end{array} \\right.", 6],
          vecthree: ["\\begin{bmatrix} #1\\\\ #2\\\\ #3 \\end{bmatrix}", 3],
          vecthreethree: ["\\begin{bmatrix} #1 & #2 & #3\\\\ #4 & #5 & #6\\\\ #7 & #8 & #9 \\end{bmatrix}", 9],
          hdotsfor: ["\\dots", 1],
          mathbbm: ["\\mathbb{#1}", 1],
          bordermatrix: ["\\matrix{#1}", 1]
      }
  }
}
);
//]]>
</script><script type="text/javascript" src="OpenCV%20%20Feature%20Matching_fichiers/MathJax.js"></script><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style>
<link href="OpenCV%20%20Feature%20Matching_fichiers/doxygen.css" rel="stylesheet" type="text/css">
<link href="OpenCV%20%20Feature%20Matching_fichiers/stylesheet.css" rel="stylesheet" type="text/css">
<script src="OpenCV%20%20Feature%20Matching_fichiers/jsapi" type="text/javascript"></script><link type="text/css" href="OpenCV%20%20Feature%20Matching_fichiers/defaulten.css" rel="stylesheet"><link type="text/css" href="OpenCV%20%20Feature%20Matching_fichiers/default.css" rel="stylesheet"><script type="text/javascript" src="OpenCV%20%20Feature%20Matching_fichiers/defaulten.js"></script><style type="text/css">
.gsc-control-cse {
font-family: Arial, sans-serif;
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-control-cse .gsc-table-result {
font-family: Arial, sans-serif;
}
input.gsc-input, .gsc-input-box, .gsc-input-box-hover, .gsc-input-box-focus {
border-color: #D9D9D9;
}
input.gsc-search-button, input.gsc-search-button:hover, input.gsc-search-button:focus {
border-color: #666666;
background-color: #CECECE;
background-image: none;
filter: none;
}
.gsc-tabHeader.gsc-tabhInactive {
border-color: #E9E9E9;
background-color: #E9E9E9;
}
.gsc-tabHeader.gsc-tabhActive {
border-color: #FF9900;
border-bottom-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-tabsArea {
border-color: #FF9900;
}
.gsc-webResult.gsc-result,
.gsc-results .gsc-imageResult {
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-webResult.gsc-result:hover,
.gsc-imageResult:hover {
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gs-webResult.gs-result a.gs-title:link,
.gs-webResult.gs-result a.gs-title:link b,
.gs-imageResult a.gs-title:link,
.gs-imageResult a.gs-title:link b {
color: #0000CC;
}
.gs-webResult.gs-result a.gs-title:visited,
.gs-webResult.gs-result a.gs-title:visited b,
.gs-imageResult a.gs-title:visited,
.gs-imageResult a.gs-title:visited b {
color: #0000CC;
}
.gs-webResult.gs-result a.gs-title:hover,
.gs-webResult.gs-result a.gs-title:hover b,
.gs-imageResult a.gs-title:hover,
.gs-imageResult a.gs-title:hover b {
color: #0000CC;
}
.gs-webResult.gs-result a.gs-title:active,
.gs-webResult.gs-result a.gs-title:active b,
.gs-imageResult a.gs-title:active,
.gs-imageResult a.gs-title:active b {
color: #0000CC;
}
.gsc-cursor-page {
color: #0000CC;
}
a.gsc-trailing-more-results:link {
color: #0000CC;
}
.gs-webResult .gs-snippet,
.gs-imageResult .gs-snippet,
.gs-fileFormatType {
color: #000000;
}
.gs-webResult div.gs-visibleUrl,
.gs-imageResult div.gs-visibleUrl {
color: #008000;
}
.gs-webResult div.gs-visibleUrl-short {
color: #008000;
}
.gs-webResult div.gs-visibleUrl-short {
display: none;
}
.gs-webResult div.gs-visibleUrl-long {
display: block;
}
.gs-promotion div.gs-visibleUrl-short {
display: none;
}
.gs-promotion div.gs-visibleUrl-long {
display: block;
}
.gsc-cursor-box {
border-color: #FFFFFF;
}
.gsc-results .gsc-cursor-box .gsc-cursor-page {
border-color: #E9E9E9;
background-color: #FFFFFF;
color: #0000CC;
}
.gsc-results .gsc-cursor-box .gsc-cursor-current-page {
border-color: #FF9900;
background-color: #FFFFFF;
color: #0000CC;
}
.gsc-webResult.gsc-result.gsc-promotion {
border-color: #336699;
background-color: #FFFFFF;
}
.gsc-completion-title {
color: #0000CC;
}
.gsc-completion-snippet {
color: #000000;
}
.gs-promotion a.gs-title:link,
.gs-promotion a.gs-title:link *,
.gs-promotion .gs-snippet a:link {
color: #0000CC;
}
.gs-promotion a.gs-title:visited,
.gs-promotion a.gs-title:visited *,
.gs-promotion .gs-snippet a:visited {
color: #0000CC;
}
.gs-promotion a.gs-title:hover,
.gs-promotion a.gs-title:hover *,
.gs-promotion .gs-snippet a:hover {
color: #0000CC;
}
.gs-promotion a.gs-title:active,
.gs-promotion a.gs-title:active *,
.gs-promotion .gs-snippet a:active {
color: #0000CC;
}
.gs-promotion .gs-snippet,
.gs-promotion .gs-title .gs-promotion-title-right,
.gs-promotion .gs-title .gs-promotion-title-right * {
color: #000000;
}
.gs-promotion .gs-visibleUrl,
.gs-promotion .gs-visibleUrl-short {
color: #008000;
}</style><style type="text/css">.gscb_a{display:inline-block;font:27px/13px arial,sans-serif}.gsst_a .gscb_a{color:#a1b9ed;cursor:pointer}.gsst_a:hover .gscb_a,.gsst_a:focus .gscb_a{color:#36c}.gsst_a{display:inline-block}.gsst_a{cursor:pointer;padding:0 4px}.gsst_a:hover{text-decoration:none!important}.gsst_b{font-size:16px;padding:0 2px;position:relative;user-select:none;-moz-user-select:none;white-space:nowrap}.gsst_e{opacity:0.55;}.gsst_a:hover .gsst_e,.gsst_a:focus .gsst_e{opacity:0.72;}.gsst_a:active .gsst_e{opacity:1;}.gsst_f{background:white;text-align:left}.gsst_g{background-color:white;border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,0.2);margin:-1px -3px;padding:0 6px}.gsst_h{background-color:white;height:1px;margin-bottom:-1px;position:relative;top:-1px}.gsib_a{width:100%;padding:4px 6px 0}.gsib_a,.gsib_b{vertical-align:top}.gssb_c{border:0;position:absolute;z-index:989}.gssb_e{border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,0.2);cursor:default}.gssb_f{visibility:hidden;white-space:nowrap}.gssb_k{border:0;display:block;position:absolute;top:0;z-index:988}.gsdd_a{border:none!important}.gsq_a{padding:0}.gsq_a{padding:0}.gscsep_a{display:none}.gssb_a{padding:0 7px}.gssb_a,.gssb_a td{white-space:nowrap;overflow:hidden;line-height:22px}#gssb_b{font-size:11px;color:#36c;text-decoration:none}#gssb_b:hover{font-size:11px;color:#36c;text-decoration:underline}.gssb_g{text-align:center;padding:8px 0 7px;position:relative}.gssb_h{font-size:15px;height:28px;margin:0.2em}.gssb_i{background:#eee}.gss_ifl{visibility:hidden;padding-left:5px}.gssb_i .gss_ifl{visibility:visible}a.gssb_j{font-size:13px;color:#36c;text-decoration:none;line-height:100%}a.gssb_j:hover{text-decoration:underline}.gssb_l{height:1px;background-color:#e5e5e5}.gssb_m{color:#000;background:#fff}.gsfe_a{border:1px solid #b9b9b9;border-top-color:#a0a0a0;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);}.gsfe_b{border:1px solid #4d90fe;outline:none;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);}.gssb_a{padding:0 9px}.gsib_a{padding-right:8px;padding-left:8px}.gsst_a{padding-top:3px}.gssb_e{border:0}.gssb_l{margin:5px 0}#gsc-i-id1::-webkit-input-placeholder{font-size:14px}#gsc-i-id1:-moz-placeholder{font-size:14px}#gsc-i-id1::-moz-placeholder{font-size:14px}#gsc-i-id1:-ms-input-placeholder{font-size:14px}#gsc-i-id1:focus::-webkit-input-placeholder{color:transparent}#gsc-i-id1:focus:-moz-placeholder{color:transparent}#gsc-i-id1:focus::-moz-placeholder{color:transparent}#gsc-i-id1:focus:-ms-input-placeholder{color:transparent}.gssb_c .gsc-completion-container{position:static}.gssb_c{z-index:5000}.gsc-completion-container table{background:transparent;font-size:inherit;font-family:inherit}.gssb_c > tbody > tr,.gssb_c > tbody > tr > td,.gssb_d,.gssb_d > tbody > tr,.gssb_d > tbody > tr > td,.gssb_e,.gssb_e > tbody > tr,.gssb_e > tbody > tr > td{padding:0;margin:0;border:0}.gssb_a table,.gssb_a table tr,.gssb_a table tr td{padding:0;margin:0;border:0}</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style></head>
<body><div id="MathJax_Message" style="display: none;"></div>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<script>
  (function() {
    var cx = '002541620211387084530:kaexgxg7oxu';
    var gcse = document.createElement('script');
    gcse.type = 'text/javascript';
    gcse.async = true;
    gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(gcse, s);
  })();
</script>
<div id="___gcse_0"><div class="gsc-control-cse gsc-control-cse-en"><div class="gsc-control-wrapper-cse" dir="ltr"><form class="gsc-search-box gsc-search-box-tools" accept-charset="utf-8"><table class="gsc-search-box" cellspacing="0" cellpadding="0"><tbody><tr><td class="gsc-input"><div class="gsc-input-box" id="gsc-iw-id1"><table style="width: 100%; padding: 0px;" id="gs_id50" class="gstl_50 " cellspacing="0" cellpadding="0"><tbody><tr><td id="gs_tti50" class="gsib_a"><input autocomplete="off" size="10" class="gsc-input" name="search" title="search" style="width: 100%; padding: 0px; border: medium none; margin: 0px; height: auto; outline: medium none; background: rgb(255, 255, 255) url(&quot;http://www.google.com/cse/static/images/1x/googlelogo_lightgrey_46x16dp.png&quot;) no-repeat scroll left center; text-indent: 48px;" id="gsc-i-id1" x-webkit-speech="" x-webkit-grammar="builtin:search" dir="ltr" spellcheck="false" placeholder="Custom Search" lang="en" type="text"></td><td class="gsib_b"><div class="gsst_b" id="gs_st50" dir="ltr"><a class="gsst_a" href="javascript:void(0)" style="display: none;"><span class="gscb_a" id="gs_cb50">×</span></a></div></td></tr></tbody></table></div><input name="bgresponse" id="bgresponse" type="hidden"></td><td class="gsc-search-button"><input src="OpenCV%20%20Feature%20Matching_fichiers/search_box_icon.png" class="gsc-search-button gsc-search-button-v2" title="search" type="image"></td><td class="gsc-clear-button"><div class="gsc-clear-button" title="clear results">&nbsp;</div></td></tr></tbody></table><table class="gsc-branding" cellspacing="0" cellpadding="0"><tbody><tr><td class="gsc-branding-user-defined"></td><td class="gsc-branding-text"><div class="gsc-branding-text">powered by</div></td><td class="gsc-branding-img"><img src="OpenCV%20%20Feature%20Matching_fichiers/googlelogo_grey_46x15dp.png" class="gsc-branding-img" srcset="https://www.google.com/cse/static/images/2x/googlelogo_grey_46x15dp.png 2x"></td></tr></tbody></table></form><div class="gsc-results-wrapper-overlay"><div class="gsc-results-close-btn" tabindex="0"></div><div class="gsc-tabsAreaInvisible"><div class="gsc-tabHeader gsc-inline-block gsc-tabhActive">Custom Search</div><span class="gs-spacer"> </span></div><div class="gsc-tabsAreaInvisible"></div><div class="gsc-above-wrapper-area-invisible"><table class="gsc-above-wrapper-area-container" cellspacing="0" cellpadding="0"><tbody><tr><td class="gsc-result-info-container"><div class="gsc-result-info-invisible"></div></td><td class="gsc-orderby-container"><div class="gsc-orderby-invisible"><div class="gsc-orderby-label gsc-inline-block">Sort by:</div><div class="gsc-option-menu-container gsc-inline-block"><div class="gsc-selected-option-container gsc-inline-block"><div class="gsc-selected-option">Relevance</div><div class="gsc-option-selector"></div></div><div class="gsc-option-menu-invisible"><div class="gsc-option-menu-item gsc-option-menu-item-highlighted"><div class="gsc-option">Relevance</div></div><div class="gsc-option-menu-item"><div class="gsc-option">Date</div></div></div></div></div></td></tr></tbody></table></div><div class="gsc-adBlockInvisible"></div><div class="gsc-wrapper"><div class="gsc-adBlockInvisible"></div><div class="gsc-resultsbox-invisible"><div class="gsc-resultsRoot gsc-tabData gsc-tabdActive"><table class="gsc-resultsHeader" cellspacing="0" cellpadding="0"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Web</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div class="gsc-result-selector gsc-one-result" title="show one result">&nbsp;</div><div class="gsc-result-selector gsc-more-results" title="show more results">&nbsp;</div><div class="gsc-result-selector gsc-all-results" title="show all results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div></div></div></div><div class="gsc-modal-background-image" tabindex="0"></div></div></div></div>

<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="OpenCV%20%20Feature%20Matching_fichiers/opencv-logo-small.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">OpenCV
   &nbsp;<span id="projectnumber">3.2.0-dev</span>
   </div>
   <div id="projectbrief">Open Source Computer Vision</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<script type="text/javascript">
//<![CDATA[
function getLabelName(innerHTML) {
    var str = innerHTML.toLowerCase();
    // Replace all '+' with 'p'
    str = str.split('+').join('p');
    // Replace all ' ' with '_'
    str = str.split(' ').join('_');
    // Replace all '#' with 'sharp'
    str = str.split('#').join('sharp');
    // Replace other special characters with 'ascii' + code
    for (var i = 0; i < str.length; i++) {
        var charCode = str.charCodeAt(i);
        if (!(charCode == 95 || (charCode > 96 && charCode < 123) || (charCode > 47 && charCode < 58)))
            str = str.substr(0, i) + 'ascii' + charCode + str.substr(i + 1);
    }
    return str;
}
function addToggle() {
    var $getDiv = $('div.newInnerHTML').last();
    var buttonName = $getDiv.html();
    var label = getLabelName(buttonName.trim());
    $getDiv.attr("title", label);
    $getDiv.hide();
    $getDiv = $getDiv.next();
    $getDiv.attr("class", "toggleable_div label_" + label);
    $getDiv.hide();
}
//]]>
</script>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.12 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="OpenCV%20%20Feature%20Matching_fichiers/menudata.js"></script>
<script type="text/javascript" src="OpenCV%20%20Feature%20Matching_fichiers/menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"><ul class="sm sm-dox" id="main-menu" data-smartmenus-id="14876075565755186"><li><a href="http://docs.opencv.org/trunk/index.html">Main Page</a></li><li><a href="http://docs.opencv.org/trunk/pages.html">Related Pages</a></li><li><a href="http://docs.opencv.org/trunk/modules.html">Modules</a></li><li><a href="http://docs.opencv.org/trunk/namespaces.html" class="has-submenu" id="sm-14876075565755186-1" aria-haspopup="true" aria-controls="sm-14876075565755186-2" aria-expanded="false"><span class="sub-arrow">+</span>Namespaces</a><ul id="sm-14876075565755186-2" role="group" aria-hidden="true" aria-labelledby="sm-14876075565755186-1" aria-expanded="false"><li><a href="http://docs.opencv.org/trunk/namespaces.html">Namespace List</a></li></ul></li><li><a href="http://docs.opencv.org/trunk/annotated.html" class="has-submenu" id="sm-14876075565755186-3" aria-haspopup="true" aria-controls="sm-14876075565755186-4" aria-expanded="false"><span class="sub-arrow">+</span>Classes</a><ul id="sm-14876075565755186-4" role="group" aria-hidden="true" aria-labelledby="sm-14876075565755186-3" aria-expanded="false"><li><a href="http://docs.opencv.org/trunk/annotated.html">Class List</a></li><li><a href="http://docs.opencv.org/trunk/classes.html">Class Index</a></li></ul></li><li><a href="http://docs.opencv.org/trunk/files.html" class="has-submenu" id="sm-14876075565755186-5" aria-haspopup="true" aria-controls="sm-14876075565755186-6" aria-expanded="false"><span class="sub-arrow">+</span>Files</a><ul id="sm-14876075565755186-6" role="group" aria-hidden="true" aria-labelledby="sm-14876075565755186-5" aria-expanded="false"><li><a href="http://docs.opencv.org/trunk/files.html">Files index</a></li><li><a href="http://docs.opencv.org/trunk/globals.html" class="has-submenu" id="sm-14876075565755186-7" aria-haspopup="true" aria-controls="sm-14876075565755186-8" aria-expanded="false"><span class="sub-arrow">+</span>Global objects</a><ul id="sm-14876075565755186-8" role="group" aria-hidden="true" aria-labelledby="sm-14876075565755186-7" aria-expanded="false"><li><a href="http://docs.opencv.org/trunk/globals.html" class="has-submenu" id="sm-14876075565755186-9" aria-haspopup="true" aria-controls="sm-14876075565755186-10" aria-expanded="false"><span class="sub-arrow">+</span>All</a><ul id="sm-14876075565755186-10" role="group" aria-hidden="true" aria-labelledby="sm-14876075565755186-9" aria-expanded="false"><li><a href="http://docs.opencv.org/trunk/globals.html#index__">_</a></li><li><a href="http://docs.opencv.org/trunk/globals_a.html#index_a">a</a></li><li><a href="http://docs.opencv.org/trunk/globals_b.html#index_b">b</a></li><li><a href="http://docs.opencv.org/trunk/globals_c.html#index_c">c</a></li><li><a href="http://docs.opencv.org/trunk/globals_f.html#index_f">f</a></li><li><a href="http://docs.opencv.org/trunk/globals_g.html#index_g">g</a></li><li><a href="http://docs.opencv.org/trunk/globals_h.html#index_h">h</a></li><li><a href="http://docs.opencv.org/trunk/globals_i.html#index_i">i</a></li><li><a href="http://docs.opencv.org/trunk/globals_k.html#index_k">k</a></li><li><a href="http://docs.opencv.org/trunk/globals_l.html#index_l">l</a></li><li><a href="http://docs.opencv.org/trunk/globals_m.html#index_m">m</a></li><li><a href="http://docs.opencv.org/trunk/globals_n.html#index_n">n</a></li><li><a href="http://docs.opencv.org/trunk/globals_o.html#index_o">o</a></li><li><a href="http://docs.opencv.org/trunk/globals_p.html#index_p">p</a></li><li><a href="http://docs.opencv.org/trunk/globals_r.html#index_r">r</a></li><li><a href="http://docs.opencv.org/trunk/globals_s.html#index_s">s</a></li><li><a href="http://docs.opencv.org/trunk/globals_t.html#index_t">t</a></li><li><a href="http://docs.opencv.org/trunk/globals_u.html#index_u">u</a></li><li><a href="http://docs.opencv.org/trunk/globals_v.html#index_v">v</a></li></ul></li><li><a href="http://docs.opencv.org/trunk/globals_func.html" class="has-submenu" id="sm-14876075565755186-11" aria-haspopup="true" aria-controls="sm-14876075565755186-12" aria-expanded="false"><span class="sub-arrow">+</span>Functions</a><ul id="sm-14876075565755186-12" role="group" aria-hidden="true" aria-labelledby="sm-14876075565755186-11" aria-expanded="false"><li><a href="http://docs.opencv.org/trunk/globals_func.html#index__">_</a></li><li><a href="http://docs.opencv.org/trunk/globals_func_a.html#index_a">a</a></li><li><a href="http://docs.opencv.org/trunk/globals_func_c.html#index_c">c</a></li><li><a href="http://docs.opencv.org/trunk/globals_func_g.html#index_g">g</a></li><li><a href="http://docs.opencv.org/trunk/globals_func_h.html#index_h">h</a></li><li><a href="http://docs.opencv.org/trunk/globals_func_m.html#index_m">m</a></li><li><a href="http://docs.opencv.org/trunk/globals_func_n.html#index_n">n</a></li><li><a href="http://docs.opencv.org/trunk/globals_func_p.html#index_p">p</a></li><li><a href="http://docs.opencv.org/trunk/globals_func_t.html#index_t">t</a></li><li><a href="http://docs.opencv.org/trunk/globals_func_u.html#index_u">u</a></li></ul></li><li><a href="http://docs.opencv.org/trunk/globals_vars.html" class="has-submenu" id="sm-14876075565755186-13" aria-haspopup="true" aria-controls="sm-14876075565755186-14" aria-expanded="false"><span class="sub-arrow">+</span>Variables</a><ul id="sm-14876075565755186-14" role="group" aria-hidden="true" aria-labelledby="sm-14876075565755186-13" aria-expanded="false"><li><a href="http://docs.opencv.org/trunk/globals_vars.html#index_c">c</a></li><li><a href="http://docs.opencv.org/trunk/globals_vars.html#index_k">k</a></li><li><a href="http://docs.opencv.org/trunk/globals_vars.html#index_s">s</a></li></ul></li><li><a href="http://docs.opencv.org/trunk/globals_type.html" class="has-submenu" id="sm-14876075565755186-15" aria-haspopup="true" aria-controls="sm-14876075565755186-16" aria-expanded="false"><span class="sub-arrow">+</span>Typedefs</a><ul id="sm-14876075565755186-16" role="group" aria-hidden="true" aria-labelledby="sm-14876075565755186-15" aria-expanded="false"><li><a href="http://docs.opencv.org/trunk/globals_type.html#index_c">c</a></li><li><a href="http://docs.opencv.org/trunk/globals_type.html#index_i">i</a></li><li><a href="http://docs.opencv.org/trunk/globals_type.html#index_n">n</a></li><li><a href="http://docs.opencv.org/trunk/globals_type.html#index_s">s</a></li><li><a href="http://docs.opencv.org/trunk/globals_type.html#index_u">u</a></li><li><a href="http://docs.opencv.org/trunk/globals_type.html#index_v">v</a></li></ul></li><li><a href="http://docs.opencv.org/trunk/globals_enum.html">Enumerations</a></li><li><a href="http://docs.opencv.org/trunk/globals_eval.html" class="has-submenu" id="sm-14876075565755186-17" aria-haspopup="true" aria-controls="sm-14876075565755186-18" aria-expanded="false"><span class="sub-arrow">+</span>Enumerator</a><ul id="sm-14876075565755186-18" role="group" aria-hidden="true" aria-labelledby="sm-14876075565755186-17" aria-expanded="false"><li><a href="http://docs.opencv.org/trunk/globals_eval.html#index_c">c</a></li><li><a href="http://docs.opencv.org/trunk/globals_eval_n.html#index_n">n</a></li></ul></li><li><a href="http://docs.opencv.org/trunk/globals_defs.html" class="has-submenu" id="sm-14876075565755186-19" aria-haspopup="true" aria-controls="sm-14876075565755186-20" aria-expanded="false"><span class="sub-arrow">+</span>Macros</a><ul id="sm-14876075565755186-20" role="group" aria-hidden="true" aria-labelledby="sm-14876075565755186-19" aria-expanded="false"><li><a href="http://docs.opencv.org/trunk/globals_defs.html#index__">_</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_b.html#index_b">b</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_c.html#index_c">c</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_f.html#index_f">f</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_h.html#index_h">h</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_i.html#index_i">i</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_l.html#index_l">l</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_m.html#index_m">m</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_n.html#index_n">n</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_o.html#index_o">o</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_r.html#index_r">r</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_s.html#index_s">s</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_t.html#index_t">t</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_u.html#index_u">u</a></li><li><a href="http://docs.opencv.org/trunk/globals_defs_v.html#index_v">v</a></li></ul></li></ul></li></ul></li><li><a href="http://docs.opencv.org/trunk/examples.html">Examples</a></li><li style="float:right"><div id="MSearchBox" class="MSearchBoxInactive"><span class="left"><img id="MSearchSelect" src="OpenCV%20%20Feature%20Matching_fichiers/mag_sel.png" onmouseover="return searchBox.OnSearchSelectShow()" onmouseout="return searchBox.OnSearchSelectHide()" alt=""><input id="MSearchField" value="Search" accesskey="S" onfocus="searchBox.OnSearchFieldFocus(true)" onblur="searchBox.OnSearchFieldFocus(false)" onkeyup="searchBox.OnSearchFieldChange(event)" type="text"></span><span class="right"><a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" src="OpenCV%20%20Feature%20Matching_fichiers/close.png" alt="" border="0"></a></span></div></li></ul></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow" onmouseover="return searchBox.OnSearchSelectShow()" onmouseout="return searchBox.OnSearchSelectHide()" onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" onclick="searchBox.OnSelectItem(0)" href="javascript:void(0)"><span class="SelectionMark">•</span>All</a><a class="SelectItem" onclick="searchBox.OnSelectItem(1)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" onclick="searchBox.OnSelectItem(2)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" onclick="searchBox.OnSelectItem(3)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" onclick="searchBox.OnSelectItem(4)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" onclick="searchBox.OnSelectItem(5)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" onclick="searchBox.OnSelectItem(6)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Typedefs</a><a class="SelectItem" onclick="searchBox.OnSelectItem(7)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" onclick="searchBox.OnSelectItem(8)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" onclick="searchBox.OnSelectItem(9)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Properties</a><a class="SelectItem" onclick="searchBox.OnSelectItem(10)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Friends</a><a class="SelectItem" onclick="searchBox.OnSelectItem(11)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Macros</a><a class="SelectItem" onclick="searchBox.OnSelectItem(12)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Modules</a><a class="SelectItem" onclick="searchBox.OnSelectItem(13)" href="javascript:void(0)"><span class="SelectionMark">&nbsp;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" name="MSearchResults" id="MSearchResults" frameborder="0">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="http://docs.opencv.org/trunk/d6/d00/tutorial_py_root.html">OpenCV-Python Tutorials</a></li><li class="navelem"><a class="el" href="http://docs.opencv.org/trunk/db/d27/tutorial_py_table_of_contents_feature2d.html">Feature Detection and Description</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Feature Matching </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><h2>Goal </h2>
<p>In this chapter</p><ul>
<li>We will see how to match features in one image with others.</li>
<li>We will use the Brute-Force matcher and FLANN Matcher in OpenCV</li>
</ul>
<h2>Basics of Brute-Force Matcher </h2>
<p>Brute-Force matcher is simple. It takes the descriptor of one feature
 in first set and is matched with all other features in second set using
 some distance calculation. And the closest one is returned.</p>
<p>For BF matcher, first we have to create the BFMatcher object using <b>cv2.BFMatcher()</b>.
 It takes two optional params. First one is normType. It specifies the 
distance measurement to be used. By default, it is cv2.NORM_L2. It is 
good for SIFT, SURF etc (cv2.NORM_L1 is also there). For binary string 
based descriptors like ORB, BRIEF, BRISK etc, cv2.NORM_HAMMING should be
 used, which used Hamming distance as measurement. If ORB is using WTA_K
 == 3 or 4, cv2.NORM_HAMMING2 should be used.</p>
<p>Second param is boolean variable, crossCheck which is false by 
default. If it is true, Matcher returns only those matches with value 
(i,j) such that i-th descriptor in set A has j-th descriptor in set B as
 the best match and vice-versa. That is, the two features in both sets 
should match each other. It provides consistant result, and is a good 
alternative to ratio test proposed by D.Lowe in SIFT paper.</p>
<p>Once it is created, two important methods are <em>BFMatcher.match()</em> and <em>BFMatcher.knnMatch()</em>.
 First one returns the best match. Second method returns k best matches 
where k is specified by the user. It may be useful when we need to do 
additional work on that.</p>
<p>Like we used <a class="el" href="http://docs.opencv.org/trunk/d4/d5d/group__features2d__draw.html#gab958f8900dd10f14316521c149a60433" title="Draws keypoints. ">cv2.drawKeypoints()</a> to draw keypoints, <b><a class="el" href="http://docs.opencv.org/trunk/d4/d5d/group__features2d__draw.html#ga7421b3941617d7267e3f2311582f49e1" title="Draws the found matches of keypoints from two images. ">cv2.drawMatches()</a></b>
 helps us to draw the matches. It stacks two images horizontally and 
draw lines from first image to second image showing best matches. There 
is also <b>cv2.drawMatchesKnn</b> which draws all the k best matches. If
 k=2, it will draw two match-lines for each keypoint. So we have to pass
 a mask if we want to selectively draw it.</p>
<p>Let's see one example for each of SURF and ORB (Both use different distance measurements).</p>
<h3>Brute-Force Matching with ORB Descriptors</h3>
<p>Here, we will see a simple example on how to match features between 
two images. In this case, I have a queryImage and a trainImage. We will 
try to find the queryImage in trainImage using feature matching. ( The 
images are /samples/c/box.png and /samples/c/box_in_scene.png)</p>
<p>We are using ORB descriptors to match features. So let's start with loading images, finding descriptors etc. </p><div class="fragment"><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">img1 = cv2.imread(<span class="stringliteral">'box.png'</span>,0)          <span class="comment"># queryImage</span></div><div class="line">img2 = cv2.imread(<span class="stringliteral">'box_in_scene.png'</span>,0) <span class="comment"># trainImage</span></div><div class="line"></div><div class="line"><span class="comment"># Initiate ORB detector</span></div><div class="line">orb = cv2.ORB_create()</div><div class="line"></div><div class="line"><span class="comment"># find the keypoints and descriptors with ORB</span></div><div class="line">kp1, des1 = orb.detectAndCompute(img1,<span class="keywordtype">None</span>)</div><div class="line">kp2, des2 = orb.detectAndCompute(img2,<span class="keywordtype">None</span>)</div></div><!-- fragment --><p>
 Next we create a BFMatcher object with distance measurement 
cv2.NORM_HAMMING (since we are using ORB) and crossCheck is switched on 
for better results. Then we use Matcher.match() method to get the best 
matches in two images. We sort them in ascending order of their 
distances so that best matches (with low distance) come to front. Then 
we draw only first 10 matches (Just for sake of visibility. You can 
increase it as you like) </p><div class="fragment"><div class="line"><span class="comment"># create BFMatcher object</span></div><div class="line">bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=<span class="keyword">True</span>)</div><div class="line"></div><div class="line"><span class="comment"># Match descriptors.</span></div><div class="line">matches = bf.match(des1,des2)</div><div class="line"></div><div class="line"><span class="comment"># Sort them in the order of their distance.</span></div><div class="line">matches = sorted(matches, key = <span class="keyword">lambda</span> x:x.distance)</div><div class="line"></div><div class="line"><span class="comment"># Draw first 10 matches.</span></div><div class="line">img3 = cv2.drawMatches(img1,kp1,img2,kp2,matches[:10], flags=2)</div><div class="line"></div><div class="line">plt.imshow(img3),plt.show()</div></div><!-- fragment --><p> Below is the result I got:</p>
<div class="image">
<img src="OpenCV%20%20Feature%20Matching_fichiers/matcher_result1.jpg" alt="matcher_result1.jpg">
<div class="caption">
image</div></div>
 <h3>What is this Matcher Object?</h3>
<p>The result of matches = bf.match(des1,des2) line is a list of DMatch objects. This DMatch object has following attributes:</p>
<ul>
<li>DMatch.distance - Distance between descriptors. The lower, the better it is.</li>
<li>DMatch.trainIdx - Index of the descriptor in train descriptors</li>
<li>DMatch.queryIdx - Index of the descriptor in query descriptors</li>
<li>DMatch.imgIdx - Index of the train image.</li>
</ul>
<h3>Brute-Force Matching with SIFT Descriptors and Ratio Test</h3>
<p>This time, we will use BFMatcher.knnMatch() to get k best matches. In
 this example, we will take k=2 so that we can apply ratio test 
explained by D.Lowe in his paper. </p><div class="fragment"><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">img1 = cv2.imread(<span class="stringliteral">'box.png'</span>,0)          <span class="comment"># queryImage</span></div><div class="line">img2 = cv2.imread(<span class="stringliteral">'box_in_scene.png'</span>,0) <span class="comment"># trainImage</span></div><div class="line"></div><div class="line"><span class="comment"># Initiate SIFT detector</span></div><div class="line">sift = cv2.SIFT()</div><div class="line"></div><div class="line"><span class="comment"># find the keypoints and descriptors with SIFT</span></div><div class="line">kp1, des1 = sift.detectAndCompute(img1,<span class="keywordtype">None</span>)</div><div class="line">kp2, des2 = sift.detectAndCompute(img2,<span class="keywordtype">None</span>)</div><div class="line"></div><div class="line"><span class="comment"># BFMatcher with default params</span></div><div class="line">bf = cv2.BFMatcher()</div><div class="line">matches = bf.knnMatch(des1,des2, k=2)</div><div class="line"></div><div class="line"><span class="comment"># Apply ratio test</span></div><div class="line">good = []</div><div class="line"><span class="keywordflow">for</span> m,n <span class="keywordflow">in</span> matches:</div><div class="line">    <span class="keywordflow">if</span> m.distance &lt; 0.75*n.distance:</div><div class="line">        good.append([m])</div><div class="line"></div><div class="line"><span class="comment"># cv2.drawMatchesKnn expects list of lists as matches.</span></div><div class="line">img3 = cv2.drawMatchesKnn(img1,kp1,img2,kp2,good,flags=2)</div><div class="line"></div><div class="line">plt.imshow(img3),plt.show()</div></div><!-- fragment --><p> See the result below:</p>
<div class="image">
<img src="OpenCV%20%20Feature%20Matching_fichiers/matcher_result2.jpg" alt="matcher_result2.jpg">
<div class="caption">
image</div></div>
 <h2>FLANN based Matcher </h2>
<p>FLANN stands for Fast Library for Approximate Nearest Neighbors. It 
contains a collection of algorithms optimized for fast nearest neighbor 
search in large datasets and for high dimensional features. It works 
more faster than BFMatcher for large datasets. We will see the second 
example with FLANN based matcher.</p>
<p>For FLANN based matcher, we need to pass two dictionaries which 
specifies the algorithm to be used, its related parameters etc. First 
one is IndexParams. For various algorithms, the information to be passed
 is explained in FLANN docs. As a summary, for algorithms like SIFT, 
SURF etc. you can pass following: </p><div class="fragment"><div class="line">index_params = dict(algorithm = FLANN_INDEX_KDTREE, trees = 5)</div></div><!-- fragment --><p>
 While using ORB, you can pass the following. The commented values are 
recommended as per the docs, but it didn't provide required results in 
some cases. Other values worked fine.: </p><div class="fragment"><div class="line">index_params= dict(algorithm = FLANN_INDEX_LSH,</div><div class="line">                   table_number = 6, <span class="comment"># 12</span></div><div class="line">                   key_size = 12,     <span class="comment"># 20</span></div><div class="line">                   multi_probe_level = 1) <span class="comment">#2</span></div></div><!-- fragment --><p>
 Second dictionary is the SearchParams. It specifies the number of times
 the trees in the index should be recursively traversed. Higher values 
gives better precision, but also takes more time. If you want to change 
the value, pass search_params = dict(checks=100).</p>
<p>With these informations, we are good to go. </p><div class="fragment"><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">img1 = cv2.imread(<span class="stringliteral">'box.png'</span>,0)          <span class="comment"># queryImage</span></div><div class="line">img2 = cv2.imread(<span class="stringliteral">'box_in_scene.png'</span>,0) <span class="comment"># trainImage</span></div><div class="line"></div><div class="line"><span class="comment"># Initiate SIFT detector</span></div><div class="line">sift = cv2.SIFT()</div><div class="line"></div><div class="line"><span class="comment"># find the keypoints and descriptors with SIFT</span></div><div class="line">kp1, des1 = sift.detectAndCompute(img1,<span class="keywordtype">None</span>)</div><div class="line">kp2, des2 = sift.detectAndCompute(img2,<span class="keywordtype">None</span>)</div><div class="line"></div><div class="line"><span class="comment"># FLANN parameters</span></div><div class="line">FLANN_INDEX_KDTREE = 0</div><div class="line">index_params = dict(algorithm = FLANN_INDEX_KDTREE, trees = 5)</div><div class="line">search_params = dict(checks=50)   <span class="comment"># or pass empty dictionary</span></div><div class="line"></div><div class="line">flann = cv2.FlannBasedMatcher(index_params,search_params)</div><div class="line"></div><div class="line">matches = flann.knnMatch(des1,des2,k=2)</div><div class="line"></div><div class="line"><span class="comment"># Need to draw only good matches, so create a mask</span></div><div class="line">matchesMask = [[0,0] <span class="keywordflow">for</span> i <span class="keywordflow">in</span> xrange(len(matches))]</div><div class="line"></div><div class="line"><span class="comment"># ratio test as per Lowe's paper</span></div><div class="line"><span class="keywordflow">for</span> i,(m,n) <span class="keywordflow">in</span> enumerate(matches):</div><div class="line">    <span class="keywordflow">if</span> m.distance &lt; 0.7*n.distance:</div><div class="line">        matchesMask[i]=[1,0]</div><div class="line"></div><div class="line">draw_params = dict(matchColor = (0,255,0),</div><div class="line">                   singlePointColor = (255,0,0),</div><div class="line">                   matchesMask = matchesMask,</div><div class="line">                   flags = 0)</div><div class="line"></div><div class="line">img3 = cv2.drawMatchesKnn(img1,kp1,img2,kp2,matches,<span class="keywordtype">None</span>,**draw_params)</div><div class="line"></div><div class="line">plt.imshow(img3,),plt.show()</div></div><!-- fragment --><p> See the result below:</p>
<div class="image">
<img src="OpenCV%20%20Feature%20Matching_fichiers/matcher_flann.jpg" alt="matcher_flann.jpg">
<div class="caption">
image</div></div>
 <h2>Additional Resources </h2>
<h2>Exercises </h2>
</div></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.6-->
<!-- start footer part -->
<hr class="footer"><address class="footer"><small>
Generated on Mon Feb 20 2017 11:07:02 for OpenCV by &nbsp;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="OpenCV%20%20Feature%20Matching_fichiers/doxygen.png" alt="doxygen">
</a> 1.8.12
</small></address>
<script type="text/javascript">
//<![CDATA[
function addButton(label, buttonName) {
    var b = document.createElement("BUTTON");
    b.innerHTML = buttonName;
    b.setAttribute('class', 'toggleable_button label_' + label);
    b.onclick = function() {
        $('.toggleable_button').css({
            border: '2px outset',
            'border-radius': '4px'
        });
        $('.toggleable_button.label_' + label).css({
            border: '2px inset',
            'border-radius': '4px'
        });
        $('.toggleable_div').css('display', 'none');
        $('.toggleable_div.label_' + label).css('display', 'block');
    };
    b.style.border = '2px outset';
    b.style.borderRadius = '4px';
    b.style.margin = '2px';
    return b;
}
function buttonsToAdd($elements, $heading, $type) {
    if ($elements.length === 0) {
        $elements = $("" + $type + ":contains(" + $heading.html() + ")").parent().prev("div.newInnerHTML");
    }
    var arr = jQuery.makeArray($elements);
    var seen = {};
    arr.forEach(function(e) {
        var txt = e.innerHTML;
        if (!seen[txt]) {
            $button = addButton(e.title, txt);
            if (Object.keys(seen).length == 0) {
                var linebreak1 = document.createElement("br");
                var linebreak2 = document.createElement("br");
                ($heading).append(linebreak1);
                ($heading).append(linebreak2);
            }
            ($heading).append($button);
            seen[txt] = true;
        }
    });
    return;
}
$("h2").each(function() {
    $heading = $(this);
    $smallerHeadings = $(this).nextUntil("h2").filter("h3").add($(this).nextUntil("h2").find("h3"));
    if ($smallerHeadings.length) {
        $smallerHeadings.each(function() {
            var $elements = $(this).nextUntil("h3").filter("div.newInnerHTML");
            buttonsToAdd($elements, $(this), "h3");
        });
    } else {
        var $elements = $(this).nextUntil("h2").filter("div.newInnerHTML");
        buttonsToAdd($elements, $heading, "h2");
    }
});
$(".toggleable_button").first().click();
var $clickDefault = $('.toggleable_button.label_python').first();
if ($clickDefault.length) {
    $clickDefault.click();
}
$clickDefault = $('.toggleable_button.label_cpp').first();
if ($clickDefault.length) {
    $clickDefault.click();
}
//]]>
</script>


<table style="width: 220px; display: none; top: 25px; left: -1px; position: absolute;" class="gstl_50 gssb_c" cellspacing="0" cellpadding="0"><tbody><tr><td class="gssb_f"></td><td class="gssb_e" style="width: 100%;"></td></tr></tbody></table></body></html>